/**----------------------------------------------------------------------------	Component: Tab	Description: Base class for each tool palette tab within Inscribe.		Stylus, Copyright 2006-2008 Biologic Institute	Licensed under the Apache License, Version 2.0 (the "License");	you may not use this file except in compliance with the License.	You may obtain a copy of the License at	    http://www.apache.org/licenses/LICENSE-2.0	Unless required by applicable law or agreed to in writing, software	distributed under the License is distributed on an "AS IS" BASIS,	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.	See the License for the specific language governing permissions and	limitations under the License.*/import mx.core.UIComponent;import mx.managers.DepthManager;import org.biologicinstitute.inscribe.Han;import org.biologicinstitute.inscribe.Palette;class org.biologicinstitute.inscribe.Tab extends UIComponent{	static var symbolName:String = "Tab";	static var symbolOwner:Object = Tab;	var className:String = "Tab";	private var boundingBox_mc:MovieClip;		private var _fIsActive:Boolean = false;		private var _cmMenu:ContextMenu = null;	function get menu():ContextMenu	{		return _cmMenu;	}	private var _han:MovieClip;	function set han(mc:MovieClip)	{		_han = mc;	}		private var _palette:MovieClip;	function set palette(mc:MovieClip)	{		_palette = mc;	}		function init()	{		super.init();		// useHandCursor = false;		boundingBox_mc._visible = false;		boundingBox_mc._width = 0;		boundingBox_mc._height = 0;	}		function createChildren()	{		_cmMenu = new ContextMenu();		_cmMenu.hideBuiltInItems();	}		function Tab()	{//		trace("Tab created");	}	function size()	{		super.size();	}		function activate(f:Boolean)	{		_fIsActive = f;		focusEnabled = f;		if (f)		{			Selection.setFocus(this);		}	}		function onKeyDown()	{//		trace('DOWN: ' + Key.getCode() + ' ' + Key.getAscii());	}		function onKeyUp()	{//		trace('UP  : ' + Key.getCode());	}		function reset()	{		activate(false);	}}